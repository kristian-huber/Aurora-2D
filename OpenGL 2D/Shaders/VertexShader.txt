#version 330 core
layout (location = 0) in vec2 position;
layout (location = 1) in vec2 textureCoords;

out vec2 texCoords;
out vec2 toLightVector[16];
out vec2 fromCenterPoint;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

uniform vec2 offset;
uniform float rows;
uniform float cols;

uniform vec2 centerPoint;

uniform vec2 lightPos[16];

void main(){
	vec2 sizes = vec2(rows, cols);
	texCoords = (textureCoords/sizes) + offset;

	vec4 worldPosition = model * vec4(position.xy, 0.0, 1.0);
	gl_Position = projection * view * worldPosition;

	for(int i = 0; i < 64; i++){
		toLightVector[i] = lightPos[i] - worldPosition.xy;
	}

	fromCenterPoint = centerPoint - worldPosition.xy;
}